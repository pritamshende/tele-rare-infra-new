name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME: tele-rare-backend
  IMAGE_TAG: ${{ github.sha }}
  DOCKERHUB_USERNAME: pritamshende
  DOCKERHUB_PASSWORD: Samsung@123 # ⚠️ For production, move this to GitHub secrets
  K8S_NAMESPACE: tele-rare
  TEST_ONLY: false
  SONAR_HOST_URL: https://sonarcloud.io
  SONAR_TOKEN: your-sonar-token
  ARGOCD_SERVER: https://argocd.example.com
  ARGOCD_AUTH_TOKEN: ${{ secrets.ARGOCD_AUTH_TOKEN }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: SonarQube Scan
        if: env.SONAR_TOKEN != 'your-sonar-token'
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ env.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ env.SONAR_HOST_URL }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image to Docker Hub
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Run Trivy Scan
        uses: aquasecurity/trivy-action@0.11.2
        with:
          image-ref:  ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          exit-code: '0'                # Or '0' if you don't want failures
          ignore-unfixed: true
          severity: HIGH,CRITICAL
          
      - name: Update Kubernetes manifests (set image tag)
        run: |
           sed -i "s|image: .*|image: pritamshende/tele-rare-backend:${{ env.IMAGE_TAG }}|" k8s-gitops/deployment.yaml
          
      - name: Commit and push updated deployment manifest
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add k8s-gitops/deployment.yaml
          git commit -m "Update image tag to ${{ env.IMAGE_TAG }} [skip ci]" || echo "No changes to commit"
          git push

      - name: Trigger ArgoCD Sync
        env:
           TOKEN: ${{ secrets.ARGOCD_AUTH_TOKEN }}
        run: |
          curl -k -H "Authorization: Bearer ${{ env.ARGOCD_AUTH_TOKEN }}" \
            -X POST "${{ env.ARGOCD_SERVER }}/api/v1/applications/tele-rare-backend/sync"
